schema {
  query: Query
}

type Query {
  # balances(chainId: ChainID!, address: String!): WalletBalances
  # nfts(chainId: ChainID!, address: String!): [Nft]

  wallet(chainId: ChainID!, address: String!): Wallet
}

enum ChainID {
  ETHEREUM
  SOLANA
}

type Wallet {
  balances: WalletBalances
  nfts: [Nft]
}

type WalletBalances {
  aggregateValue: Float!
  native: TokenBalance!
  tokens: [TokenBalance]!
}

type Collection {
  mint: ID!
  name: String
  verified: Boolean!
}

type MarketData {
  id: String!
  change: Float!
  lastUpdatedAt: Int!
  logo: String!
  price: Float!
  value: Float!
}

type Nft {
  collection: Collection
  imageUrl: String
  mint: ID!
  name: String!
}

type TokenBalance {
  address: ID!
  amount: String!
  decimals: Int!
  displayAmount: String!
  marketData: MarketData
  mint: String!
}
