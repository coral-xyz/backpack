name: Pull Request
on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - master
  push:
    branches:
      - master

jobs:
  add-labels-based-on-whats-changed:
    name: Add PR labels
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            mobile:
              - 'packages/app-mobile/**'
            extension:
              - 'packages/app-extension/**'
            xnft:
              - 'packages/react-xnft/**'
              - 'packages/react-xnft-renderer/**'
              - 'packages/xnft/**'
              - 'packages/xnft-cli/**'

      - if: steps.changes.outputs.mobile == 'true'
        uses: andymckay/labeler@1.0.4
        with:
          add-labels: "mobile"

      - if: steps.changes.outputs.extension == 'true'
        uses: andymckay/labeler@1.0.4
        with:
          add-labels: "extension"

      - if: steps.changes.outputs.xnft == 'true'
        uses: andymckay/labeler@1.0.4
        with:
          add-labels: "xnft"

  tests:
    runs-on: ubuntu-latest
    name: Build and run tests
    # https://turborepo.org/docs/ci/github-actions
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      ##########################################################################
      # Setup environment.
      ##########################################################################

      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: actions/cache@v3
        name: yarn-cache
        id: yarn-cache
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            !**/node_modules/.cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      ##########################################################################
      # Yarn install.
      ##########################################################################

      - name: yarn install
        run: yarn install --frozen-lockfile --prefer-offline

      ##########################################################################
      # Yarn test.
      ##########################################################################

      - run: yarn test

      ##########################################################################
      # Build extension.
      ##########################################################################

      #
      # Rebuild the extension with an explicit config.
      #
      - name: "build for release"
        env:
          BACKPACK_CONFIG_VERSION: "latest-${{ github.run_number }}"
          BACKPACK_CONFIG_LOG_LEVEL: "info"
          BACKPACK_FEATURE_LIGHT_MODE: "true"
          BACKPACK_FEATURE_POP_MODE: "true"
          # CI!=true so that build warnings aren't treated like errors (for now)
          CI: ""
        run: yarn build

      ##########################################################################
      # GitHub Pages.
      ##########################################################################

      - run: cd packages/background && yarn build:html

      - if: github.event_name == 'pull_request'
        name: "set env.commit_sha from latest commit in PR"
        run: echo "commit_sha=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
      - if: github.event_name == 'push'
        name: "set env.commit_sha from commit or merge commit"
        run: echo "commit_sha=${{ github.sha }}" >> $GITHUB_ENV

      - name: "set env.short_sha"
        run: echo "short_sha=`echo "${{ env.commit_sha }}" | cut -c1-8`" >> $GITHUB_ENV

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_dir: packages/background/build
          github_token: ${{ secrets.GITHUB_TOKEN }}
          destination_dir: "background-scripts/${{ env.short_sha }}"

      - name: "Deploy ledger injection"
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_dir: packages/ledger-injection/dist
          deploy_key: ${{ secrets.LEDGER_INJECTION_DEPLOY_KEY }}
          external_repository: coral-xyz/ledger-injection

      ##########################################################################
      # Upload build artifacts.
      ##########################################################################

      - name: "zip build artifacts"
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        working-directory: packages/app-extension
        run: zip -r build-${{ github.run_number }}.zip build/
      - name: "upload build artifacts"
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v2
        with:
          name: backpack-build
          path: packages/app-extension/build-${{ github.run_number }}.zip

      ##########################################################################
      # Release.
      ##########################################################################

      #
      # TODO: the master branch conditionson all these are bit hacky. Probably
      #       a cleaner way of doing this.
      #

      - uses: actions/download-artifact@v2
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        with:
          name: backpack-build
          path: ./
      - uses: actions/create-release@v1
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        name: Create Draft Release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest-${{ github.run_number }}
          release_name: latest-${{ github.run_number }}
          draft: false
          prerelease: false
      - uses: actions/upload-release-asset@v1.0.1
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build-${{ github.run_number }}.zip
          asset_name: build-${{ github.run_number }}.zip
          asset_content_type: application/zip

      ##########################################################################
      # Send artifacts to out channels.
      ##########################################################################

      - name: "post artifacts to Discord"
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: sinshutu/upload-to-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: packages/app-extension/build-${{ github.run_number }}.zip

      ##########################################################################
      # NPM Publish.
      ##########################################################################

      - name:  "update npm package version"
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: ./scripts/npm_release.sh 0.1.0-latest.${{ github.run_number }}
      - name: "publish to npm: common-public"
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_ACCESS_TOKEN }}
          tag: latest
          package: packages/common-public/package.json
      - name: "publish to npm: themes"
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_ACCESS_TOKEN }}
          tag: latest
          package: packages/themes/package.json
      - name: "publish to npm: react-xnft"
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_ACCESS_TOKEN }}
          tag: latest
          package: packages/react-xnft/package.json
      - name: "publish to npm: xnft-cli"
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_ACCESS_TOKEN }}
          tag: latest
          package: packages/xnft-cli/package.json
