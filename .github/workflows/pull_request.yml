name: Pull Request
on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - master
  push:
    branches:
      - master

jobs:
  tests:
    runs-on: ubuntu-latest
    name: Run tests
    steps:
      ##########################################################################
      # Setup environment.
      ##########################################################################

      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn

      ##########################################################################
      # Yarn link.
      ##########################################################################

      #
      # Wallet Adapter tasks.
      #
      # The following [wallet-adapter] tasks are only necessary until the
      # default 'anchor' branch in https://github.com/coral-xyz/wallet-adapter
      # gets merged upstream and deployed in @solana/wallet-adapter
      #
      - name: "[wallet-adapter] checkout"
        uses: actions/checkout@v3
        with:
          repository: coral-xyz/wallet-adapter
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          path: wallet-adapter
      - name: "[wallet-adapter] set env var"
        run: echo "wallet_adapter_sha=$(
          cd wallet-adapter && git rev-parse --short HEAD
          )" >> $GITHUB_ENV
      # cache `yarn build` output based on latest commit SHA as it takes 10+ mins
      - name: "[wallet-adapter] cache"
        id: wallet-adapter-cache
        uses: actions/cache@v3
        with:
          path: wallet-adapter
          key: ${{ runner.OS }}-wallet-adapter-cache-${{ env.wallet_adapter_sha }}
      - name: "[wallet-adapter] install deps"
        working-directory: wallet-adapter
        run: yarn install --frozen-lockfile
      - name: "[wallet-adapter] build"
        if: steps.wallet-adapter-cache.outputs.cache-hit != 'true'
        working-directory: wallet-adapter
        run: yarn build
      - name: "[wallet-adapter] yarn link"
        working-directory: wallet-adapter
        run: npx lerna exec -- yarn link

      ##########################################################################
      # Yarn install.
      ##########################################################################

      - run: yarn install --frozen-lockfile

      ##########################################################################
      # Yarn test.
      ##########################################################################

      - run: yarn test

      ##########################################################################
      # Build extension.
      ##########################################################################

      - name: "build extension"
        # CI!=true so that build warnings aren't treated like errors (for now)
        env:
          CI: ""
        run: yarn build

      ##########################################################################
      # GitHub Pages.
      ##########################################################################

      - run: cd packages/background && yarn build:html

      - name: "set env.short_commit_sha"
        run: echo "short_commit_sha=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_dir: packages/background/build
          github_token: ${{ secrets.GITHUB_TOKEN }}
          destination_dir: background-scripts/${{ env.short_commit_sha }}

      ##########################################################################
      # Release.
      ##########################################################################

      #
      # TODO: the master branch conditionson all these are bit hacky. Probably
      #       a cleaner way of doing this.
      #

      - name: "zip build artifacts"
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        working-directory: packages/app-extension
        run: zip -r build.zip build/
      - name: "upload build artifacts"
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v2
        with:
          name: backpack-build
          path: packages/app-extension/build.zip
      - uses: actions/download-artifact@v2
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        with:
          name: backpack-build
          path: ./
      - uses: actions/create-release@v1
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        name: Create Draft Release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest-${{ github.run_number }}
          release_name: latest-${{ github.run_number }}
          draft: false
          prerelease: false
      - uses: actions/upload-release-asset@v1.0.1
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build.zip
          asset_name: build.zip
          asset_content_type: application/zip
